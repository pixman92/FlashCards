{
    "sourceFile": "Development/firebaseJS.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1642578792976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1642578792976,
            "name": "Commit-0",
            "content": "\r\n// =================\r\n\r\n\r\n// const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n\r\n// =================\r\nvar db; \r\nfunction firebaseInit(){ \r\n        //   var firebaseApp = firebase.initializeApp(firebaseConfig); \r\n        \r\n        // adding Firebase to project\r\n// import Afirebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBYD67JqdmGaAJpDyj8iLy1e5xXjB4rp-c\",\r\n    authDomain: \"flashcards-ca11e.firebaseapp.com\",\r\n    projectId: \"flashcards-ca11e\",\r\n    storageBucket: \"flashcards-ca11e.appspot.com\",\r\n    messagingSenderId: \"686642076264\",\r\n    appId: \"1:686642076264:web:94d5224c8cf76aeb4779dd\"\r\n  };\r\n  // // for database\r\n  var firebaseApp = firebase.initializeApp(firebaseConfig)\r\n  db = firebaseApp.firestore();\r\n    // var db = firebase.firestore(); \r\n}\r\n\r\n// =================\r\n// Firebase functions\r\n \r\nfunction pullData(){ \r\n  // your standard - pulling data from Firebase \r\n  db.collection(collectionName).get().then((querySnapshot) => { \r\n    querySnapshot.forEach((doc) => { \r\n        console.log(`${doc.id} => ${JSON.stringify(doc.data())}`); \r\n    }); \r\n}); \r\n} \r\n\r\nfunction pushData(data){ \r\n  // data should be JSONstring, for beginning a data push to a new record \r\n  db.collection(collectionName).add(data).then((docRef) => { \r\n      console.log(\"Document written with ID:\", docRef.id); \r\n  }) \r\n  .catch((error) => { \r\n      console.error(\"Error adding document: \", error); \r\n    });\r\n}   \r\n// =================\r\n// adding Firebase to project\r\n// import firebase from 'firebase';\r\n \r\n// const firebaseConfig = {\r\n//     apiKey: \"AIzaSyBYD67JqdmGaAJpDyj8iLy1e5xXjB4rp-c\",\r\n//     authDomain: \"flashcards-ca11e.firebaseapp.com\",\r\n//     projectId: \"flashcards-ca11e\",\r\n//     storageBucket: \"flashcards-ca11e.appspot.com\",\r\n//     messagingSenderId: \"686642076264\",\r\n//     appId: \"1:686642076264:web:94d5224c8cf76aeb4779dd\"\r\n//   };\r\n \r\n \r\n// const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n \r\n \r\n// // for database \r\n// const db = firebaseApp.firestore();\r\n \r\n// =================\r\n \r\n// =================\r\n// basic adding email\r\nfunction pushToEmail(newEmail){\r\n    //use this function to push new Email to Firebase \r\n    pushData({'email': newEmail});\r\n}\r\n \r\nvar userUID = \"\";\r\nvar savedUIDstr =\"\";\r\nasync function pullEmailGetUID(emailSearch){\r\n    //pull - that uses ALL method\r\n    // async function pull(_callback){\r\n    var savedArrayUID = []; var savedArrayEmails = [];\r\n    await db.collection(collectionName).get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n            savedArrayUID.push(doc.id);\r\n            savedArrayEmails.push(doc.data());\r\n            // console.log(`${doc.id} => ${JSON.stringify(doc.data())}`);\r\n        });\r\n    }).then(()=>{\r\n        runningThroughSavedArrays(savedArrayEmails, savedArrayUID, emailSearch)\r\n    });\r\n}\r\n \r\nfunction pullEmailGetUIDWhere(emailSearch){\r\n    //pull that uses \"WHERE\" method\r\n    var savedArrayUID = []; var savedArrayEmails = [];  \r\n    db.collection(collectionName).where('email', '==', emailSearch).get()\r\n    .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n            savedArrayUID.push(doc.id);\r\n            savedArrayEmails.push(doc.data());\r\n            // doc.data() is never undefined for query doc snapshots\r\n \r\n            console.log(doc.id, \" => \", doc.data());\r\n        });\r\n    }).then(()=>{\r\n        runningThroughSavedArrays(savedArrayEmails, savedArrayUID, emailSearch)\r\n    }).catch((error) => {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n}\r\n \r\nvar foundMe = false;\r\n//helper function\r\nfunction runningThroughSavedArrays(savedArrayEmails, savedArrayUID, emailSearch){\r\n    //function that takes the arrays, and runs through them\r\n    //to find the corresponding email\r\n    savedArrayEmails.forEach((item, index)=>{\r\n        // console.log(item) \r\n        // console.log(item.email)\r\n        // console.log('index', index);\r\n        \r\n        if(item.email==emailSearch){\r\n            console.log('Found at ', index, ' index');\r\n            console.log( '=====\\n', savedArrayUID[index]);\r\n \r\n            savedUIDstr = savedArrayUID[index];\r\n            foundMe = true;\r\n        }\r\n        if(index>=savedArrayEmails.length-1 && foundMe==false){\r\n            console.log('not found');\r\n        }\r\n    });\r\n}\r\n \r\n \r\n//=================\r\nvar wholeDocDataPull = [];\r\nasync function pullDataBasedOnUID(){\r\n    //pulls based on a found 'savedUIDstr'\r\n    try{\r\n        await db.collection(collectionName).doc(savedUIDstr).get().then(doc =>{\r\n            console.log(doc.data());\r\n            wholeDocDataPull.push(doc.data());\r\n            console.log('...saved to wholeDocDataPull...');\r\n        });\r\n    }catch(err){\r\n        console.log('Errored out at, ', err);\r\n    }\r\n}\r\n \r\nfunction addToFirebaseBasedOnUID(objName, dataString){\r\n    //pushes custom obj - using <objName> & <dataString>\r\n    // to make custom obj, that is pushed to a record - found by UID\r\n    // using previous <pullEmailGetUID()> function\r\n\r\n\r\n    // NOTE: merge:false - meaning - donwload WHOLE string, update it and push again, as in new string\r\n    var obj = {};\r\n    // obj[0] = objName;\r\n    obj[objName.toString()] = dataString;\r\n    \r\n    // obj['test'] = JSON.stringify(obj['test']);\r\n    try{\r\n        db.collection(collectionName).doc(savedUIDstr).set(obj, {merge: true});\r\n \r\n    }catch(err){\r\n        console.log('Errored out, ', err);\r\n    }\r\n \r\n}\r\n \r\n// ==================================\r\n"
        }
    ]
}