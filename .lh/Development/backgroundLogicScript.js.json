{
    "sourceFile": "Development/backgroundLogicScript.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 32,
            "patches": [
                {
                    "date": 1643268388466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1643268432428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,11 @@\n     emailSearch = \"sam@gmail.com\"; deckName = 'history';\r\n     await tmp(()=>{}).then(async()=>{\r\n         await getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName).then(async()=>{\r\n                 await saveDeckObjInfo();\r\n-        }).then(async()=>{\r\n+        // }).then(async()=>{\r\n                 // await makeTagsHTML();    \r\n-        })\r\n+        });\r\n });\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1643268476127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n async function prepForPullingJSON(){\r\n     emailSearch = \"sam@gmail.com\"; deckName = 'history';\r\n     await tmp(()=>{}).then(async()=>{\r\n         await getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName).then(async()=>{\r\n-                await saveDeckObjInfo();\r\n+                // await saveDeckObjInfo();\r\n         // }).then(async()=>{\r\n                 // await makeTagsHTML();    \r\n         });\r\n });\r\n"
                },
                {
                    "date": 1643268907744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,8 @@\n         myJSONFlashCardsPULLED = new JSON_Instance();\r\n     }\r\n     // =============================\r\n     \r\n-    // =============================\r\n     async function pushToRetrieveLocalVariable(entryName){\r\n         var keys = Object.keys(wholeDocDataPull[0]);\r\n         values = Object.values(wholeDocDataPull[0]);\r\n     \r\n"
                },
                {
                    "date": 1643269078332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,9 @@\n // =================\r\n \r\n var values = [];\r\n var myJSONFlashCardsPULLED = {}; \r\n+var allDeckArrays = [];\r\n async function getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName){\r\n     // function to make a new instance OBJ, that will hold pulled JSON Data\r\n     // pushes out JSON data (my custom) - to myJSONFlashCardsPULLED\r\n     \r\n"
                },
                {
                    "date": 1643324999483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n         run(tagsArray);\r\n         function run(){\r\n             holdingArr = Array.from(arguments);\r\n         }\r\n-        myJSONFlashCards.JSONobj.innerArray[0][0].push([['TAGS', holdingArr]]);\r\n+        myJSONFlashCards.JSONobj.innerArray[0][4] =[['TAGS', holdingArr]];\r\n         // myJSONFlashCards.addToObj([[[0], holdingArr]]);\r\n     }else{\r\n         console.log('Destination - undefined!');\r\n     }\r\n"
                },
                {
                    "date": 1643325130922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n         run(tagsArray);\r\n         function run(){\r\n             holdingArr = Array.from(arguments);\r\n         }\r\n-        myJSONFlashCards.JSONobj.innerArray[0][4] =[['TAGS', holdingArr]];\r\n+        myJSONFlashCards.JSONobj.innerArray[0][0][4] =[['TAGS', holdingArr]];\r\n         // myJSONFlashCards.addToObj([[[0], holdingArr]]);\r\n     }else{\r\n         console.log('Destination - undefined!');\r\n     }\r\n"
                },
                {
                    "date": 1643325337593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,10 +78,19 @@\n     addToFirebaseBasedOnUID(myJSONFlashCards.JSONobj.innerArray[0][0][1][1], myJSONFlashCards.stringMe())\r\n \r\n }\r\n \r\n+// =============================\r\n+function changeName(newName){\r\n+    //function that changes the name of give Deck\r\n+    //save same deck, new name/delete old Deck\r\n \r\n+    await pullEmailGetUID('sam@gmail.com')\r\n+    addToFirebaseBasedOnUID(myJSONFlashCards.JSONobj.innerArray[0][0][1][1], myJSONFlashCards.stringMe())\r\n+}\r\n \r\n+\r\n+\r\n // =================\r\n \r\n var values = [];\r\n var myJSONFlashCardsPULLED = {}; \r\n"
                },
                {
                    "date": 1643325343051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     //function that changes the name of give Deck\r\n     //save same deck, new name/delete old Deck\r\n \r\n     await pullEmailGetUID('sam@gmail.com')\r\n-    addToFirebaseBasedOnUID(myJSONFlashCards.JSONobj.innerArray[0][0][1][1], myJSONFlashCards.stringMe())\r\n+    addToFirebaseBasedOnUID(newName, myJSONFlashCards.stringMe())\r\n }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1643325366427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n \r\n }\r\n \r\n // =============================\r\n-function changeName(newName){\r\n+async function changeName(newName){\r\n     //function that changes the name of give Deck\r\n     //save same deck, new name/delete old Deck\r\n \r\n     await pullEmailGetUID('sam@gmail.com')\r\n"
                },
                {
                    "date": 1643327593653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n }\r\n async function tmp(){}\r\n \r\n async function prepForPullingJSON(){\r\n-    emailSearch = \"sam@gmail.com\"; deckName = 'history';\r\n+    emailSearch = \"sam@gmail.com\"; deckName = 'alegra';\r\n     await tmp(()=>{}).then(async()=>{\r\n         await getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName).then(async()=>{\r\n                 // await saveDeckObjInfo();\r\n         // }).then(async()=>{\r\n"
                },
                {
                    "date": 1643327654712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n }\r\n async function tmp(){}\r\n \r\n async function prepForPullingJSON(){\r\n+    makeFlashCardPulledInstance();\r\n     emailSearch = \"sam@gmail.com\"; deckName = 'alegra';\r\n     await tmp(()=>{}).then(async()=>{\r\n         await getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName).then(async()=>{\r\n                 // await saveDeckObjInfo();\r\n"
                },
                {
                    "date": 1643327744726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,14 @@\n }\r\n async function tmp(){}\r\n \r\n async function prepForPullingJSON(){\r\n-    makeFlashCardPulledInstance();\r\n     emailSearch = \"sam@gmail.com\"; deckName = 'alegra';\r\n     await tmp(()=>{}).then(async()=>{\r\n-        await getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName).then(async()=>{\r\n+        await makeFlashCardPulledInstance().then(async()=>{\r\n+            await getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName)\r\n+        })\r\n+\r\n                 // await saveDeckObjInfo();\r\n         // }).then(async()=>{\r\n                 // await makeTagsHTML();    \r\n         });\r\n"
                },
                {
                    "date": 1643351572941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n                 // await saveDeckObjInfo();\r\n         // }).then(async()=>{\r\n                 // await makeTagsHTML();    \r\n         });\r\n-});\r\n+// });\r\n \r\n \r\n \r\n }\r\n"
                },
                {
                    "date": 1643352176456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,11 +28,8 @@\n         // }).then(async()=>{\r\n                 // await makeTagsHTML();    \r\n         });\r\n // });\r\n-\r\n-\r\n-\r\n }\r\n \r\n \r\n //=============================\r\n"
                },
                {
                    "date": 1643352195130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     emailSearch = \"sam@gmail.com\"; deckName = 'alegra';\r\n     await tmp(()=>{}).then(async()=>{\r\n         await makeFlashCardPulledInstance().then(async()=>{\r\n             await getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName)\r\n-        })\r\n+        });\r\n \r\n                 // await saveDeckObjInfo();\r\n         // }).then(async()=>{\r\n                 // await makeTagsHTML();    \r\n"
                },
                {
                    "date": 1643352683978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,232 +0,0 @@\n-\r\n-// Account Setup:\r\n-// email: is the Account holder\r\n-// history/math/etc: deckNames\r\n-//\r\n-\r\n-// 2 Functions - 1 goes up. 1 pulls down\r\n-function prepForSendingJSON(){\r\n-    makeInstanceFlashCards();\r\n-    firstIndex('history');\r\n-    addQuestionAddAnswerToPushFlashCards('WWII?', 'long time ago')\r\n-    addQuestionAddAnswerToPushFlashCards('Romans big success?', 'Trojan horse');\r\n-    // addQuestionAddAnswerToPushFlashCards(question, answer)\r\n-    pushFlashCardsManipulateTAGS(['lover', 'kind', 'royal', 'peace'])\r\n-    pushFlashCardData();\r\n-\r\n-}\r\n-async function tmp(){}\r\n-\r\n-async function prepForPullingJSON(){\r\n-    emailSearch = \"sam@gmail.com\"; deckName = 'alegra';\r\n-    await tmp(()=>{}).then(async()=>{\r\n-        await makeFlashCardPulledInstance().then(async()=>{\r\n-            await getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName)\r\n-        });\r\n-\r\n-                // await saveDeckObjInfo();\r\n-        // }).then(async()=>{\r\n-                // await makeTagsHTML();    \r\n-        });\r\n-// });\r\n-}\r\n-\r\n-\r\n-//=============================\r\n-\r\n-var myJSONFlashCards;       // global variable for 'pushed' variable\r\n-\r\n-\r\n-//creates the myJSONFlashCards instance\r\n-function makeInstanceFlashCards(){\r\n-  myJSONFlashCards = new JSON_Instance();\r\n-}\r\n-\r\n-function makingEmail(){\r\n-    pushToEmail('sam@gmail.com');\r\n-}\r\n-function firstIndex(title){\r\n-    myJSONFlashCards.addMoreToIndex(0, [[[0], [['emailOwner', 'sam@gmail.com'],['title', title], ['sharedWithEmails', '-1'], ['deckScore', '0']]]]);\r\n-}\r\n-\r\n-function addQuestionAddAnswerToPushFlashCards(question, answer){\r\n-    myJSONFlashCards.addToObj([[[0], [['question', question], ['answer', answer], ['score', -1]]]])\r\n-    myJSONFlashCards.print();\r\n-\r\n-}\r\n-\r\n-var holdingArr = [];\r\n-function pushFlashCardsManipulateTAGS(tagsArray){\r\n-    // function to Edit tags!, take an Array, for 1st time creation\r\n-    if(myJSONFlashCards.JSONobj.innerArray[0]){\r\n-        run(tagsArray);\r\n-        function run(){\r\n-            holdingArr = Array.from(arguments);\r\n-        }\r\n-        myJSONFlashCards.JSONobj.innerArray[0][0][4] =[['TAGS', holdingArr]];\r\n-        // myJSONFlashCards.addToObj([[[0], holdingArr]]);\r\n-    }else{\r\n-        console.log('Destination - undefined!');\r\n-    }\r\n-}\r\n-\r\n-async function pushFlashCardData(){\r\n-    //function that pushes FlashCardData to Firebase\r\n-    await pullEmailGetUID('sam@gmail.com')\r\n-    // saves title and data\r\n-    // to be pushed to Firebase\r\n-    addToFirebaseBasedOnUID(myJSONFlashCards.JSONobj.innerArray[0][0][1][1], myJSONFlashCards.stringMe())\r\n-\r\n-}\r\n-\r\n-// =============================\r\n-async function changeName(newName){\r\n-    //function that changes the name of give Deck\r\n-    //save same deck, new name/delete old Deck\r\n-\r\n-    await pullEmailGetUID('sam@gmail.com')\r\n-    addToFirebaseBasedOnUID(newName, myJSONFlashCards.stringMe())\r\n-}\r\n-\r\n-\r\n-\r\n-// =================\r\n-\r\n-var values = [];\r\n-var myJSONFlashCardsPULLED = {}; \r\n-var allDeckArrays = [];\r\n-async function getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName){\r\n-    // function to make a new instance OBJ, that will hold pulled JSON Data\r\n-    // pushes out JSON data (my custom) - to myJSONFlashCardsPULLED\r\n-    \r\n-    await totalEmailSearch(emailSearch, deckName);\r\n-    async function totalEmailSearch(emailSearch){\r\n-        await tmp().then(async()=>{\r\n-            await searchForEmailGetUID(emailSearch);        //found local\r\n-            await pullDataBasedOnUID();                     //found in script.js\r\n-            await makeFlashCardPulledInstance();            //found local\r\n-            await pushToRetrieveLocalVariable(deckName);    //found local\r\n-            myJSONFlashCardsPULLED.parseMe();\r\n-        });\r\n-    \r\n-    }\r\n-\r\n-    // =============================\r\n-    async function tmp(){}\r\n-    async function makeFlashCardPulledInstance(){\r\n-        myJSONFlashCardsPULLED = new JSON_Instance();\r\n-    }\r\n-    // =============================\r\n-    \r\n-    async function pushToRetrieveLocalVariable(entryName){\r\n-        var keys = Object.keys(wholeDocDataPull[0]);\r\n-        values = Object.values(wholeDocDataPull[0]);\r\n-    \r\n-        console.log('keys', keys);\r\n-        console.log('values', values);\r\n-    \r\n-        var savedIndex = -1;\r\n-        keys.forEach((item, index)=>{\r\n-            console.log('item', item);\r\n-            if(item == entryName){\r\n-                savedIndex = index;\r\n-                console.log('found index', index);\r\n-            }\r\n-        });\r\n-    \r\n-        myJSONFlashCardsPULLED.insertJSON(values[savedIndex])\r\n-    }\r\n-    \r\n-}\r\n-async function searchForEmailGetUID(emailSearch){\r\n-    var savedArrayUID = []; var savedArrayEmails = [];\r\n-    await db.collection(collectionName).get().then(async (querySnapshot) => {\r\n-        await querySnapshot.forEach(async (doc) => {\r\n-            await savedArrayUID.push(doc.id);\r\n-            await savedArrayEmails.push(doc.data());\r\n-            // console.log(`${doc.id} => ${JSON.stringify(doc.data())}`);\r\n-        });\r\n-    }).then(async ()=>{\r\n-        await savedArrayEmails.forEach(async (item, index)=>{\r\n-            // console.log(item) \r\n-            // console.log(item.email)\r\n-            // console.log('index', index);\r\n-            \r\n-            if(item.email==emailSearch){\r\n-                console.log('Found at ', index, ' index');\r\n-                console.log( '=====\\n', savedArrayUID[index]);\r\n-     \r\n-                savedUIDstr = savedArrayUID[index];\r\n-                foundMe = true;\r\n-            }\r\n-            if(index>=savedArrayEmails.length-1 && foundMe==false){\r\n-                console.log('not found');\r\n-            }\r\n-        });\r\n-    });\r\n-\r\n-}\r\n-// ==========================================================\r\n-function addQuestionAddAnswerToPullFlashCards(question, answer){\r\n-    //function to add questions to PULLED OBJ\r\n-    myJSONFlashCardsPULLED.addToObj([[[0], [['question', question], ['answer', answer], ['score', -1]]]])\r\n-    myJSONFlashCardsPULLED.print();\r\n-\r\n-    \r\n-    addToFirebaseBasedOnUID(myJSONFlashCardsPULLED.JSONobj.innerArray[0][0][1][1], myJSONFlashCardsPULLED.stringMe())       //this code adds back, with NEW Q/As\r\n-}\r\n-function pullFlashCardsManipulateTAGS(TAGMe){\r\n-    //this is the Indexing - to get to TAGS within the first element of Flash Card data\r\n-    if(myJSONFlashCardsPULLED){\r\n-        myTagsArray = myJSONFlashCardsPULLED.JSONobj.innerArray[0][0][3][0][1][0];\r\n-    \r\n-        myTagsArray.push(TAGMe);\r\n-        myJSONFlashCardsPULLED.JSONobj.innerArray[0][0][3][0][1][0] = myTagsArray;\r\n-        \r\n-        pushFlashCardDataAfterEdit();\r\n-    }else{\r\n-        console.log('Destination - Undefined');\r\n-    }\r\n-}\r\n-\r\n-function changeScore(index, newScore){\r\n-    if(index!=0){\r\n-        myJSONFlashCardsPULLED.JSONobj.innerArray[index][0][2][1] = newScore;\r\n-    \r\n-        pushFlashCardDataAfterEdit();\r\n-    }else{\r\n-        console.log('Cannot manipulate 0th index - RESTRICTED AREA -');\r\n-    }\r\n-}\r\n-\r\n-\r\n-function deleteAQuestion(index){\r\n-    if(index!=0){\r\n-        myJSONFlashCardsPULLED.JSONobj.innerArray.splice(index, 1);\r\n-        pushFlashCardDataAfterEdit();\r\n-    }else{\r\n-        console.log('Cannot delete 0th index, RESTRICTED AREA');\r\n-    }\r\n-\r\n-}\r\n-\r\n-//=============================\r\n-async function pushFlashCardDataAfterEdit(){\r\n-    await pullEmailGetUID('sam@gmail.com')\r\n-    // saves title and data\r\n-    // to be pushed to Firebase\r\n-\r\n-    //title, JSON.stringMe() - my own JSON.stringify\r\n-    addToFirebaseBasedOnUID(myJSONFlashCardsPULLED.JSONobj.innerArray[0][0][1][1], myJSONFlashCardsPULLED.stringMe())\r\n-}\r\n-\r\n-// =============================\r\n-async function pullAllDocData(emailSearch){\r\n-    //function to get ALL 'key' data from Firebase Decks\r\n-    // essentially DeckNames\r\n-    await searchForEmailGetUID(emailSearch);        //found local\r\n-    await pullDataBasedOnUID();  \r\n-    console.log('wholeDocDataPull', wholeDocDataPull);\r\n-    var keys = Object.keys(wholeDocDataPull[0]);\r\n-    console.log('keys!', keys);\r\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1643352694959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,26 @@\n+// 2 Functions - 1 goes up. 1 pulls down\r\n+function prepForSendingJSON(){\r\n+    makeInstanceFlashCards();\r\n+    firstIndex('history');\r\n+    addQuestionAddAnswerToPushFlashCards('WWII?', 'long time ago')\r\n+    addQuestionAddAnswerToPushFlashCards('Romans big success?', 'Trojan horse');\r\n+    // addQuestionAddAnswerToPushFlashCards(question, answer)\r\n+    pushFlashCardsManipulateTAGS(['lover', 'kind', 'royal', 'peace'])\r\n+    pushFlashCardData();\r\n+\r\n+}\r\n+async function tmp(){}\r\n+\r\n+async function prepForPullingJSON(){\r\n+    emailSearch = \"sam@gmail.com\"; deckName = 'alegra';\r\n+    await tmp(()=>{}).then(async()=>{\r\n+        await makeFlashCardPulledInstance().then(async()=>{\r\n+            await getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName)\r\n+        });\r\n+\r\n+                // await saveDeckObjInfo();\r\n+        // }).then(async()=>{\r\n+                // await makeTagsHTML();    \r\n+        });\r\n+// });\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1643352731402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,5 +22,8 @@\n         // }).then(async()=>{\r\n                 // await makeTagsHTML();    \r\n         });\r\n // });\r\n-}\n\\ No newline at end of file\n+}\r\n+\r\n+// ===========End of Send/Receive Decks functions==================\r\n+\r\n"
                },
                {
                    "date": 1643352744093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,4 +26,7 @@\n }\r\n \r\n // ===========End of Send/Receive Decks functions==================\r\n \r\n+var myJSONFlashCards;       // global variable for 'pushed' variable\r\n+\r\n+// =============================\n\\ No newline at end of file\n"
                },
                {
                    "date": 1643352752287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,5 +28,9 @@\n // ===========End of Send/Receive Decks functions==================\r\n \r\n var myJSONFlashCards;       // global variable for 'pushed' variable\r\n \r\n-// =============================\n\\ No newline at end of file\n+// =============================\r\n+function makeInstanceFlashCards(){\r\n+    //creates the myJSONFlashCards instance\r\n+    myJSONFlashCards = new JSON_Instance();\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1643352773474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,5 +32,43 @@\n // =============================\r\n function makeInstanceFlashCards(){\r\n     //creates the myJSONFlashCards instance\r\n     myJSONFlashCards = new JSON_Instance();\r\n-  }\n\\ No newline at end of file\n+}\r\n+\r\n+// =============================\r\n+function makingEmail(){\r\n+    pushToEmail('sam@gmail.com');\r\n+}\r\n+function firstIndex(title){\r\n+    myJSONFlashCards.addMoreToIndex(0, [[[0], [['emailOwner', 'sam@gmail.com'],['title', title], ['sharedWithEmails', '-1'], ['deckScore', '0']]]]);\r\n+}\r\n+\r\n+function addQuestionAddAnswerToPushFlashCards(question, answer){\r\n+    myJSONFlashCards.addToObj([[[0], [['question', question], ['answer', answer], ['score', -1]]]])\r\n+    myJSONFlashCards.print();\r\n+\r\n+}\r\n+\r\n+var holdingArr = [];\r\n+function pushFlashCardsManipulateTAGS(tagsArray){\r\n+    // function to Edit tags!, take an Array, for 1st time creation\r\n+    if(myJSONFlashCards.JSONobj.innerArray[0]){\r\n+        run(tagsArray);\r\n+        function run(){\r\n+            holdingArr = Array.from(arguments);\r\n+        }\r\n+        myJSONFlashCards.JSONobj.innerArray[0][0][4] =[['TAGS', holdingArr]];\r\n+        // myJSONFlashCards.addToObj([[[0], holdingArr]]);\r\n+    }else{\r\n+        console.log('Destination - undefined!');\r\n+    }\r\n+}\r\n+\r\n+async function pushFlashCardData(){\r\n+    //function that pushes FlashCardData to Firebase\r\n+    await pullEmailGetUID('sam@gmail.com')\r\n+    // saves title and data\r\n+    // to be pushed to Firebase\r\n+    addToFirebaseBasedOnUID(myJSONFlashCards.JSONobj.innerArray[0][0][1][1], myJSONFlashCards.stringMe())\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1643352803647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,9 @@\n }\r\n \r\n // =============================\r\n function makingEmail(){\r\n+    //makes email UID path, first off - for creating a collection in Firebase\r\n     pushToEmail('sam@gmail.com');\r\n }\r\n function firstIndex(title){\r\n     myJSONFlashCards.addMoreToIndex(0, [[[0], [['emailOwner', 'sam@gmail.com'],['title', title], ['sharedWithEmails', '-1'], ['deckScore', '0']]]]);\r\n"
                },
                {
                    "date": 1643352974275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,5 +71,22 @@\n     // saves title and data\r\n     // to be pushed to Firebase\r\n     addToFirebaseBasedOnUID(myJSONFlashCards.JSONobj.innerArray[0][0][1][1], myJSONFlashCards.stringMe())\r\n \r\n+}\r\n+// =============================\r\n+async function changeName(newName){\r\n+    //function that changes the name of give Deck\r\n+    //save same deck, new name/delete old Deck\r\n+\r\n+    await pullEmailGetUID('sam@gmail.com')\r\n+    addToFirebaseBasedOnUID(newName, myJSONFlashCards.stringMe())\r\n+}\r\n+\r\n+// TODO - delete old NAME\r\n+async function deleteMyKeyThenChangeToNewName(){\r\n+        //pulls all DECK data from a single USER\r\n+\r\n+        await prepForPullingJSON();\r\n+        decksArray = wholeDocDataPull;\r\n+        keyMe = Object.keys(wholeDocDataPull[0]);\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1643352986942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,5 +88,6 @@\n \r\n         await prepForPullingJSON();\r\n         decksArray = wholeDocDataPull;\r\n         keyMe = Object.keys(wholeDocDataPull[0]);\r\n-}\n\\ No newline at end of file\n+}\r\n+// =============================\n\\ No newline at end of file\n"
                },
                {
                    "date": 1643353032336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,5 +89,79 @@\n         await prepForPullingJSON();\r\n         decksArray = wholeDocDataPull;\r\n         keyMe = Object.keys(wholeDocDataPull[0]);\r\n }\r\n-// =============================\n\\ No newline at end of file\n+// =============================\r\n+var values = [];\r\n+var myJSONFlashCardsPULLED = {}; \r\n+var allDeckArrays = [];\r\n+async function getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName){\r\n+    // function to make a new instance OBJ, that will hold pulled JSON Data\r\n+    // pushes out JSON data (my custom) - to myJSONFlashCardsPULLED\r\n+    \r\n+    await totalEmailSearch(emailSearch, deckName);\r\n+    async function totalEmailSearch(emailSearch){\r\n+        await tmp().then(async()=>{\r\n+            await searchForEmailGetUID(emailSearch);        //found local\r\n+            await pullDataBasedOnUID();                     //found in script.js\r\n+            await makeFlashCardPulledInstance();            //found local\r\n+            await pushToRetrieveLocalVariable(deckName);    //found local\r\n+            myJSONFlashCardsPULLED.parseMe();\r\n+        });\r\n+    \r\n+    }\r\n+\r\n+    // =============================\r\n+    async function tmp(){}\r\n+    async function makeFlashCardPulledInstance(){\r\n+        myJSONFlashCardsPULLED = new JSON_Instance();\r\n+    }\r\n+    // =============================\r\n+    \r\n+    async function pushToRetrieveLocalVariable(entryName){\r\n+        var keys = Object.keys(wholeDocDataPull[0]);\r\n+        values = Object.values(wholeDocDataPull[0]);\r\n+    \r\n+        console.log('keys', keys);\r\n+        console.log('values', values);\r\n+    \r\n+        var savedIndex = -1;\r\n+        keys.forEach((item, index)=>{\r\n+            console.log('item', item);\r\n+            if(item == entryName){\r\n+                savedIndex = index;\r\n+                console.log('found index', index);\r\n+            }\r\n+        });\r\n+    \r\n+        myJSONFlashCardsPULLED.insertJSON(values[savedIndex])\r\n+    }\r\n+    \r\n+}\r\n+async function searchForEmailGetUID(emailSearch){\r\n+    var savedArrayUID = []; var savedArrayEmails = [];\r\n+    await db.collection(collectionName).get().then(async (querySnapshot) => {\r\n+        await querySnapshot.forEach(async (doc) => {\r\n+            await savedArrayUID.push(doc.id);\r\n+            await savedArrayEmails.push(doc.data());\r\n+            // console.log(`${doc.id} => ${JSON.stringify(doc.data())}`);\r\n+        });\r\n+    }).then(async ()=>{\r\n+        await savedArrayEmails.forEach(async (item, index)=>{\r\n+            // console.log(item) \r\n+            // console.log(item.email)\r\n+            // console.log('index', index);\r\n+            \r\n+            if(item.email==emailSearch){\r\n+                console.log('Found at ', index, ' index');\r\n+                console.log( '=====\\n', savedArrayUID[index]);\r\n+     \r\n+                savedUIDstr = savedArrayUID[index];\r\n+                foundMe = true;\r\n+            }\r\n+            if(index>=savedArrayEmails.length-1 && foundMe==false){\r\n+                console.log('not found');\r\n+            }\r\n+        });\r\n+    });\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1643353056058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,8 +90,10 @@\n         decksArray = wholeDocDataPull;\r\n         keyMe = Object.keys(wholeDocDataPull[0]);\r\n }\r\n // =============================\r\n+\r\n+// BIG list of functions that pull Firebase OBJ data\r\n var values = [];\r\n var myJSONFlashCardsPULLED = {}; \r\n var allDeckArrays = [];\r\n async function getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName){\r\n"
                },
                {
                    "date": 1643354225299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,14 +15,9 @@\n     emailSearch = \"sam@gmail.com\"; deckName = 'alegra';\r\n     await tmp(()=>{}).then(async()=>{\r\n         await makeFlashCardPulledInstance().then(async()=>{\r\n             await getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName)\r\n-        });\r\n-\r\n-                // await saveDeckObjInfo();\r\n-        // }).then(async()=>{\r\n-                // await makeTagsHTML();    \r\n-        });\r\n+        })});\r\n // });\r\n }\r\n \r\n // ===========End of Send/Receive Decks functions==================\r\n"
                },
                {
                    "date": 1643354327315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,10 @@\n \r\n }\r\n async function tmp(){}\r\n \r\n+var emailSearch;\r\n+\r\n async function prepForPullingJSON(){\r\n     emailSearch = \"sam@gmail.com\"; deckName = 'alegra';\r\n     await tmp(()=>{}).then(async()=>{\r\n         await makeFlashCardPulledInstance().then(async()=>{\r\n"
                },
                {
                    "date": 1643354673846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,11 @@\n \r\n async function prepForPullingJSON(){\r\n     emailSearch = \"sam@gmail.com\"; deckName = 'alegra';\r\n     await tmp(()=>{}).then(async()=>{\r\n-        await makeFlashCardPulledInstance().then(async()=>{\r\n-            await getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName)\r\n+        await getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName).then(async()=>{\r\n+            await makeFlashCardPulledInstance().then(async()=>{\r\n+        })\r\n         })});\r\n // });\r\n }\r\n \r\n"
                },
                {
                    "date": 1643354970151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n             await searchForEmailGetUID(emailSearch);        //found local\r\n             await pullDataBasedOnUID();                     //found in script.js\r\n             await makeFlashCardPulledInstance();            //found local\r\n             await pushToRetrieveLocalVariable(deckName);    //found local\r\n-            myJSONFlashCardsPULLED.parseMe();\r\n+            // myJSONFlashCardsPULLED.parseMe();\r\n         });\r\n     \r\n     }\r\n \r\n"
                },
                {
                    "date": 1643355090521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n             await searchForEmailGetUID(emailSearch);        //found local\r\n             await pullDataBasedOnUID();                     //found in script.js\r\n             await makeFlashCardPulledInstance();            //found local\r\n             await pushToRetrieveLocalVariable(deckName);    //found local\r\n-            // myJSONFlashCardsPULLED.parseMe();\r\n+            myJSONFlashCardsPULLED.parseMe();\r\n         });\r\n     \r\n     }\r\n \r\n"
                },
                {
                    "date": 1643355103810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,36 +108,38 @@\n             myJSONFlashCardsPULLED.parseMe();\r\n         });\r\n     \r\n     }\r\n+    \r\n+}\r\n \r\n     // =============================\r\n-    async function tmp(){}\r\n-    async function makeFlashCardPulledInstance(){\r\n-        myJSONFlashCardsPULLED = new JSON_Instance();\r\n-    }\r\n-    // =============================\r\n+async function tmp(){}\r\n+async function makeFlashCardPulledInstance(){\r\n+    myJSONFlashCardsPULLED = new JSON_Instance();\r\n+}\r\n+// =============================\r\n+\r\n+async function pushToRetrieveLocalVariable(entryName){\r\n+    var keys = Object.keys(wholeDocDataPull[0]);\r\n+    values = Object.values(wholeDocDataPull[0]);\r\n+\r\n+    console.log('keys', keys);\r\n+    console.log('values', values);\r\n+\r\n+    var savedIndex = -1;\r\n+    keys.forEach((item, index)=>{\r\n+        console.log('item', item);\r\n+        if(item == entryName){\r\n+            savedIndex = index;\r\n+            console.log('found index', index);\r\n+        }\r\n+    });\r\n+\r\n+    myJSONFlashCardsPULLED.insertJSON(values[savedIndex])\r\n+}\r\n     \r\n-    async function pushToRetrieveLocalVariable(entryName){\r\n-        var keys = Object.keys(wholeDocDataPull[0]);\r\n-        values = Object.values(wholeDocDataPull[0]);\r\n-    \r\n-        console.log('keys', keys);\r\n-        console.log('values', values);\r\n-    \r\n-        var savedIndex = -1;\r\n-        keys.forEach((item, index)=>{\r\n-            console.log('item', item);\r\n-            if(item == entryName){\r\n-                savedIndex = index;\r\n-                console.log('found index', index);\r\n-            }\r\n-        });\r\n-    \r\n-        myJSONFlashCardsPULLED.insertJSON(values[savedIndex])\r\n-    }\r\n-    \r\n-}\r\n+\r\n async function searchForEmailGetUID(emailSearch){\r\n     var savedArrayUID = []; var savedArrayEmails = [];\r\n     await db.collection(collectionName).get().then(async (querySnapshot) => {\r\n         await querySnapshot.forEach(async (doc) => {\r\n"
                }
            ],
            "date": 1643268388466,
            "name": "Commit-0",
            "content": "\r\n// Account Setup:\r\n// email: is the Account holder\r\n// history/math/etc: deckNames\r\n//\r\n\r\n// 2 Functions - 1 goes up. 1 pulls down\r\nfunction prepForSendingJSON(){\r\n    makeInstanceFlashCards();\r\n    firstIndex('history');\r\n    addQuestionAddAnswerToPushFlashCards('WWII?', 'long time ago')\r\n    addQuestionAddAnswerToPushFlashCards('Romans big success?', 'Trojan horse');\r\n    // addQuestionAddAnswerToPushFlashCards(question, answer)\r\n    pushFlashCardsManipulateTAGS(['lover', 'kind', 'royal', 'peace'])\r\n    pushFlashCardData();\r\n\r\n}\r\nasync function tmp(){}\r\n\r\nasync function prepForPullingJSON(){\r\n    emailSearch = \"sam@gmail.com\"; deckName = 'history';\r\n    await tmp(()=>{}).then(async()=>{\r\n        await getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName).then(async()=>{\r\n                await saveDeckObjInfo();\r\n        }).then(async()=>{\r\n                // await makeTagsHTML();    \r\n        })\r\n});\r\n\r\n\r\n\r\n}\r\n\r\n\r\n//=============================\r\n\r\nvar myJSONFlashCards;       // global variable for 'pushed' variable\r\n\r\n\r\n//creates the myJSONFlashCards instance\r\nfunction makeInstanceFlashCards(){\r\n  myJSONFlashCards = new JSON_Instance();\r\n}\r\n\r\nfunction makingEmail(){\r\n    pushToEmail('sam@gmail.com');\r\n}\r\nfunction firstIndex(title){\r\n    myJSONFlashCards.addMoreToIndex(0, [[[0], [['emailOwner', 'sam@gmail.com'],['title', title], ['sharedWithEmails', '-1'], ['deckScore', '0']]]]);\r\n}\r\n\r\nfunction addQuestionAddAnswerToPushFlashCards(question, answer){\r\n    myJSONFlashCards.addToObj([[[0], [['question', question], ['answer', answer], ['score', -1]]]])\r\n    myJSONFlashCards.print();\r\n\r\n}\r\n\r\nvar holdingArr = [];\r\nfunction pushFlashCardsManipulateTAGS(tagsArray){\r\n    // function to Edit tags!, take an Array, for 1st time creation\r\n    if(myJSONFlashCards.JSONobj.innerArray[0]){\r\n        run(tagsArray);\r\n        function run(){\r\n            holdingArr = Array.from(arguments);\r\n        }\r\n        myJSONFlashCards.JSONobj.innerArray[0][0].push([['TAGS', holdingArr]]);\r\n        // myJSONFlashCards.addToObj([[[0], holdingArr]]);\r\n    }else{\r\n        console.log('Destination - undefined!');\r\n    }\r\n}\r\n\r\nasync function pushFlashCardData(){\r\n    //function that pushes FlashCardData to Firebase\r\n    await pullEmailGetUID('sam@gmail.com')\r\n    // saves title and data\r\n    // to be pushed to Firebase\r\n    addToFirebaseBasedOnUID(myJSONFlashCards.JSONobj.innerArray[0][0][1][1], myJSONFlashCards.stringMe())\r\n\r\n}\r\n\r\n\r\n\r\n// =================\r\n\r\nvar values = [];\r\nvar myJSONFlashCardsPULLED = {}; \r\nasync function getDataFromFirebaseToAddToJSONInstance(emailSearch, deckName){\r\n    // function to make a new instance OBJ, that will hold pulled JSON Data\r\n    // pushes out JSON data (my custom) - to myJSONFlashCardsPULLED\r\n    \r\n    await totalEmailSearch(emailSearch, deckName);\r\n    async function totalEmailSearch(emailSearch){\r\n        await tmp().then(async()=>{\r\n            await searchForEmailGetUID(emailSearch);        //found local\r\n            await pullDataBasedOnUID();                     //found in script.js\r\n            await makeFlashCardPulledInstance();            //found local\r\n            await pushToRetrieveLocalVariable(deckName);    //found local\r\n            myJSONFlashCardsPULLED.parseMe();\r\n        });\r\n    \r\n    }\r\n\r\n    // =============================\r\n    async function tmp(){}\r\n    async function makeFlashCardPulledInstance(){\r\n        myJSONFlashCardsPULLED = new JSON_Instance();\r\n    }\r\n    // =============================\r\n    \r\n    // =============================\r\n    async function pushToRetrieveLocalVariable(entryName){\r\n        var keys = Object.keys(wholeDocDataPull[0]);\r\n        values = Object.values(wholeDocDataPull[0]);\r\n    \r\n        console.log('keys', keys);\r\n        console.log('values', values);\r\n    \r\n        var savedIndex = -1;\r\n        keys.forEach((item, index)=>{\r\n            console.log('item', item);\r\n            if(item == entryName){\r\n                savedIndex = index;\r\n                console.log('found index', index);\r\n            }\r\n        });\r\n    \r\n        myJSONFlashCardsPULLED.insertJSON(values[savedIndex])\r\n    }\r\n    \r\n}\r\nasync function searchForEmailGetUID(emailSearch){\r\n    var savedArrayUID = []; var savedArrayEmails = [];\r\n    await db.collection(collectionName).get().then(async (querySnapshot) => {\r\n        await querySnapshot.forEach(async (doc) => {\r\n            await savedArrayUID.push(doc.id);\r\n            await savedArrayEmails.push(doc.data());\r\n            // console.log(`${doc.id} => ${JSON.stringify(doc.data())}`);\r\n        });\r\n    }).then(async ()=>{\r\n        await savedArrayEmails.forEach(async (item, index)=>{\r\n            // console.log(item) \r\n            // console.log(item.email)\r\n            // console.log('index', index);\r\n            \r\n            if(item.email==emailSearch){\r\n                console.log('Found at ', index, ' index');\r\n                console.log( '=====\\n', savedArrayUID[index]);\r\n     \r\n                savedUIDstr = savedArrayUID[index];\r\n                foundMe = true;\r\n            }\r\n            if(index>=savedArrayEmails.length-1 && foundMe==false){\r\n                console.log('not found');\r\n            }\r\n        });\r\n    });\r\n\r\n}\r\n// ==========================================================\r\nfunction addQuestionAddAnswerToPullFlashCards(question, answer){\r\n    //function to add questions to PULLED OBJ\r\n    myJSONFlashCardsPULLED.addToObj([[[0], [['question', question], ['answer', answer], ['score', -1]]]])\r\n    myJSONFlashCardsPULLED.print();\r\n\r\n    \r\n    addToFirebaseBasedOnUID(myJSONFlashCardsPULLED.JSONobj.innerArray[0][0][1][1], myJSONFlashCardsPULLED.stringMe())       //this code adds back, with NEW Q/As\r\n}\r\nfunction pullFlashCardsManipulateTAGS(TAGMe){\r\n    //this is the Indexing - to get to TAGS within the first element of Flash Card data\r\n    if(myJSONFlashCardsPULLED){\r\n        myTagsArray = myJSONFlashCardsPULLED.JSONobj.innerArray[0][0][3][0][1][0];\r\n    \r\n        myTagsArray.push(TAGMe);\r\n        myJSONFlashCardsPULLED.JSONobj.innerArray[0][0][3][0][1][0] = myTagsArray;\r\n        \r\n        pushFlashCardDataAfterEdit();\r\n    }else{\r\n        console.log('Destination - Undefined');\r\n    }\r\n}\r\n\r\nfunction changeScore(index, newScore){\r\n    if(index!=0){\r\n        myJSONFlashCardsPULLED.JSONobj.innerArray[index][0][2][1] = newScore;\r\n    \r\n        pushFlashCardDataAfterEdit();\r\n    }else{\r\n        console.log('Cannot manipulate 0th index - RESTRICTED AREA -');\r\n    }\r\n}\r\n\r\n\r\nfunction deleteAQuestion(index){\r\n    if(index!=0){\r\n        myJSONFlashCardsPULLED.JSONobj.innerArray.splice(index, 1);\r\n        pushFlashCardDataAfterEdit();\r\n    }else{\r\n        console.log('Cannot delete 0th index, RESTRICTED AREA');\r\n    }\r\n\r\n}\r\n\r\n//=============================\r\nasync function pushFlashCardDataAfterEdit(){\r\n    await pullEmailGetUID('sam@gmail.com')\r\n    // saves title and data\r\n    // to be pushed to Firebase\r\n\r\n    //title, JSON.stringMe() - my own JSON.stringify\r\n    addToFirebaseBasedOnUID(myJSONFlashCardsPULLED.JSONobj.innerArray[0][0][1][1], myJSONFlashCardsPULLED.stringMe())\r\n}\r\n\r\n// =============================\r\nasync function pullAllDocData(emailSearch){\r\n    //function to get ALL 'key' data from Firebase Decks\r\n    // essentially DeckNames\r\n    await searchForEmailGetUID(emailSearch);        //found local\r\n    await pullDataBasedOnUID();  \r\n    console.log('wholeDocDataPull', wholeDocDataPull);\r\n    var keys = Object.keys(wholeDocDataPull[0]);\r\n    console.log('keys!', keys);\r\n}"
        }
    ]
}